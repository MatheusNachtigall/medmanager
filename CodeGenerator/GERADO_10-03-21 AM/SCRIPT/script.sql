IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'AGENCIA_CARREGAR') DROP PROCEDURE AGENCIA_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'AGENCIA_LISTAR') DROP PROCEDURE AGENCIA_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'AGENCIA_ATUALIZAR') DROP PROCEDURE AGENCIA_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'AGENCIA_INSERIR') DROP PROCEDURE AGENCIA_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'AGENCIA_EXCLUIR') DROP PROCEDURE AGENCIA_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CIDADE_CARREGAR') DROP PROCEDURE CIDADE_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CIDADE_LISTAR') DROP PROCEDURE CIDADE_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CIDADE_ATUALIZAR') DROP PROCEDURE CIDADE_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CIDADE_INSERIR') DROP PROCEDURE CIDADE_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CIDADE_EXCLUIR') DROP PROCEDURE CIDADE_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CLIENTE_CARREGAR') DROP PROCEDURE CLIENTE_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CLIENTE_LISTAR') DROP PROCEDURE CLIENTE_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CLIENTE_ATUALIZAR') DROP PROCEDURE CLIENTE_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CLIENTE_INSERIR') DROP PROCEDURE CLIENTE_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'CLIENTE_EXCLUIR') DROP PROCEDURE CLIENTE_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_CARREGAR') DROP PROCEDURE DEDUCAO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_LISTAR') DROP PROCEDURE DEDUCAO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_ATUALIZAR') DROP PROCEDURE DEDUCAO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_INSERIR') DROP PROCEDURE DEDUCAO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_EXCLUIR') DROP PROCEDURE DEDUCAO_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_TIPO_CARREGAR') DROP PROCEDURE DEDUCAO_TIPO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_TIPO_LISTAR') DROP PROCEDURE DEDUCAO_TIPO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_TIPO_ATUALIZAR') DROP PROCEDURE DEDUCAO_TIPO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_TIPO_INSERIR') DROP PROCEDURE DEDUCAO_TIPO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'DEDUCAO_TIPO_EXCLUIR') DROP PROCEDURE DEDUCAO_TIPO_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'FATURAMENTO_CARREGAR') DROP PROCEDURE FATURAMENTO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'FATURAMENTO_LISTAR') DROP PROCEDURE FATURAMENTO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'FATURAMENTO_ATUALIZAR') DROP PROCEDURE FATURAMENTO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'FATURAMENTO_INSERIR') DROP PROCEDURE FATURAMENTO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'FATURAMENTO_EXCLUIR') DROP PROCEDURE FATURAMENTO_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'HOSPITAL_CARREGAR') DROP PROCEDURE HOSPITAL_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'HOSPITAL_LISTAR') DROP PROCEDURE HOSPITAL_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'HOSPITAL_ATUALIZAR') DROP PROCEDURE HOSPITAL_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'HOSPITAL_INSERIR') DROP PROCEDURE HOSPITAL_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'HOSPITAL_EXCLUIR') DROP PROCEDURE HOSPITAL_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'INSS_CARREGAR') DROP PROCEDURE INSS_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'INSS_LISTAR') DROP PROCEDURE INSS_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'INSS_ATUALIZAR') DROP PROCEDURE INSS_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'INSS_INSERIR') DROP PROCEDURE INSS_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'INSS_EXCLUIR') DROP PROCEDURE INSS_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PLANTAO_CARREGAR') DROP PROCEDURE PLANTAO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PLANTAO_LISTAR') DROP PROCEDURE PLANTAO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PLANTAO_ATUALIZAR') DROP PROCEDURE PLANTAO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PLANTAO_INSERIR') DROP PROCEDURE PLANTAO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PLANTAO_EXCLUIR') DROP PROCEDURE PLANTAO_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PROJETO_CARREGAR') DROP PROCEDURE PROJETO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PROJETO_LISTAR') DROP PROCEDURE PROJETO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PROJETO_ATUALIZAR') DROP PROCEDURE PROJETO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PROJETO_INSERIR') DROP PROCEDURE PROJETO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'PROJETO_EXCLUIR') DROP PROCEDURE PROJETO_EXCLUIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'USUARIO_CARREGAR') DROP PROCEDURE USUARIO_CARREGAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'USUARIO_LISTAR') DROP PROCEDURE USUARIO_LISTAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'USUARIO_ATUALIZAR') DROP PROCEDURE USUARIO_ATUALIZAR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'USUARIO_INSERIR') DROP PROCEDURE USUARIO_INSERIR
IF EXISTS(SELECT 1 FROM sysobjects WHERE name = 'USUARIO_EXCLUIR') DROP PROCEDURE USUARIO_EXCLUIR
GO

CREATE PROCEDURE [AGENCIA_CARREGAR]
(
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	SELECT
		[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
		[AGENCIA].[NOME] AS [AGENCIA_NOME]
	FROM
		[AGENCIA]
	WHERE
		([AGENCIA].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([AGENCIA].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [AGENCIA_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'AGENCIA_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[AGENCIA]
		WHERE
			([AGENCIA].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
			AND ([AGENCIA].[NOME] LIKE @NOME OR @NOME IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[AGENCIA].[AGENCIA_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [AGENCIA].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [AGENCIA].[NOME])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [AGENCIA].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [AGENCIA].[NOME])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[AGENCIA]
				WHERE
					([AGENCIA].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
					AND ([AGENCIA].[NOME] LIKE @NOME OR @NOME IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
				[AGENCIA].[NOME] AS [AGENCIA_NOME],
				[AGENCIA].[AGENCIA_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [AGENCIA].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [AGENCIA].[NOME])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [AGENCIA].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [AGENCIA].[NOME])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[AGENCIA]
			WHERE
				([AGENCIA].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
				AND ([AGENCIA].[NOME] LIKE @NOME OR @NOME IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [AGENCIA_ATUALIZAR]
(
	@AGENCIA_ID int,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[AGENCIA]
	SET
		[NOME] = @NOME
	WHERE
		[AGENCIA_ID] = @AGENCIA_ID

	RETURN @@Error

GO
CREATE PROCEDURE [AGENCIA_INSERIR]
(
	@AGENCIA_ID int = null OUTPUT,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [AGENCIA]
	(
		[NOME]
	)
	VALUES
	(
		@NOME
	)

	SELECT @AGENCIA_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [AGENCIA_EXCLUIR]
(
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[AGENCIA] 
	WHERE 
		([AGENCIA].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([AGENCIA].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [CIDADE_CARREGAR]
(
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	SELECT
		[CIDADE].[CIDADE_ID] AS [CIDADE_CIDADE_ID],
		[CIDADE].[NOME] AS [CIDADE_NOME]
	FROM
		[CIDADE]
	WHERE
		([CIDADE].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
		AND ([CIDADE].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [CIDADE_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'CIDADE_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[CIDADE]
		WHERE
			([CIDADE].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
			AND ([CIDADE].[NOME] LIKE @NOME OR @NOME IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[CIDADE].[CIDADE_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [CIDADE].[CIDADE_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CIDADE].[NOME])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [CIDADE].[CIDADE_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CIDADE].[NOME])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[CIDADE]
				WHERE
					([CIDADE].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
					AND ([CIDADE].[NOME] LIKE @NOME OR @NOME IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[CIDADE].[CIDADE_ID] AS [CIDADE_CIDADE_ID],
				[CIDADE].[NOME] AS [CIDADE_NOME],
				[CIDADE].[CIDADE_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [CIDADE].[CIDADE_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CIDADE].[NOME])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [CIDADE].[CIDADE_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CIDADE].[NOME])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[CIDADE]
			WHERE
				([CIDADE].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
				AND ([CIDADE].[NOME] LIKE @NOME OR @NOME IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [CIDADE_ATUALIZAR]
(
	@CIDADE_ID int,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[CIDADE]
	SET
		[NOME] = @NOME
	WHERE
		[CIDADE_ID] = @CIDADE_ID

	RETURN @@Error

GO
CREATE PROCEDURE [CIDADE_INSERIR]
(
	@CIDADE_ID int = null OUTPUT,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [CIDADE]
	(
		[NOME]
	)
	VALUES
	(
		@NOME
	)

	SELECT @CIDADE_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [CIDADE_EXCLUIR]
(
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[CIDADE] 
	WHERE 
		([CIDADE].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
		AND ([CIDADE].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [CLIENTE_CARREGAR]
(
	@CLIENTE_ID int = null,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	SELECT
		[CLIENTE].[CLIENTE_ID] AS [CLIENTE_CLIENTE_ID],
		[CLIENTE].[AGENCIA_ID] AS [CLIENTE_AGENCIA_ID],
		[CLIENTE].[NOME] AS [CLIENTE_NOME],
		[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
		[AGENCIA].[NOME] AS [AGENCIA_NOME]
	FROM
		[CLIENTE]
		LEFT JOIN AGENCIA
			ON [CLIENTE].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
	WHERE
		([CLIENTE].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
		AND ([CLIENTE].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([CLIENTE].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [CLIENTE_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'CLIENTE_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@CLIENTE_ID int = null,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[CLIENTE]
			LEFT JOIN AGENCIA
				ON [CLIENTE].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
		WHERE
			([CLIENTE].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
			AND ([CLIENTE].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
			AND ([CLIENTE].[NOME] LIKE @NOME OR @NOME IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[CLIENTE].[CLIENTE_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[CLIENTE_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CLIENTE].[NOME])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[CLIENTE_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CLIENTE].[NOME])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[CLIENTE]
					LEFT JOIN AGENCIA
						ON [CLIENTE].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
				WHERE
					([CLIENTE].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
					AND ([CLIENTE].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
					AND ([CLIENTE].[NOME] LIKE @NOME OR @NOME IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[CLIENTE].[CLIENTE_ID] AS [CLIENTE_CLIENTE_ID],
				[CLIENTE].[AGENCIA_ID] AS [CLIENTE_AGENCIA_ID],
				[CLIENTE].[NOME] AS [CLIENTE_NOME],
				[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
				[AGENCIA].[NOME] AS [AGENCIA_NOME],
				[CLIENTE].[CLIENTE_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[CLIENTE_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CLIENTE].[NOME])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[CLIENTE_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [CLIENTE].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [CLIENTE].[NOME])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[CLIENTE]
				LEFT JOIN AGENCIA
					ON [CLIENTE].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
			WHERE
				([CLIENTE].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
				AND ([CLIENTE].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
				AND ([CLIENTE].[NOME] LIKE @NOME OR @NOME IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [CLIENTE_ATUALIZAR]
(
	@CLIENTE_ID int,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[CLIENTE]
	SET
		[AGENCIA_ID] = @AGENCIA_ID,
		[NOME] = @NOME
	WHERE
		[CLIENTE_ID] = @CLIENTE_ID

	RETURN @@Error

GO
CREATE PROCEDURE [CLIENTE_INSERIR]
(
	@CLIENTE_ID int = null OUTPUT,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [CLIENTE]
	(
		[AGENCIA_ID],
		[NOME]
	)
	VALUES
	(
		@AGENCIA_ID,
		@NOME
	)

	SELECT @CLIENTE_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [CLIENTE_EXCLUIR]
(
	@CLIENTE_ID int = null,
	@AGENCIA_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[CLIENTE] 
	WHERE 
		([CLIENTE].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
		AND ([CLIENTE].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([CLIENTE].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_CARREGAR]
(
	@DEDUCAO_ID int = null,
	@PLANTAO_ID int = null,
	@DEDUCAO_TIPO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_DEDUCAO datetime = null
)
AS
BEGIN

	SELECT
		[DEDUCAO].[DEDUCAO_ID] AS [DEDUCAO_DEDUCAO_ID],
		[DEDUCAO].[PLANTAO_ID] AS [DEDUCAO_PLANTAO_ID],
		[DEDUCAO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_DEDUCAO_TIPO_ID],
		[DEDUCAO].[VALOR] AS [DEDUCAO_VALOR],
		[DEDUCAO].[DATA_DEDUCAO] AS [DEDUCAO_DATA_DEDUCAO],
		[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
		[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
		[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
		[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
		[PLANTAO].[INSS] AS [PLANTAO_INSS],
		[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
		[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
		[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
		[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO],
		[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_TIPO_DEDUCAO_TIPO_ID],
		[DEDUCAO_TIPO].[NOME] AS [DEDUCAO_TIPO_NOME]
	FROM
		[DEDUCAO]
		LEFT JOIN PLANTAO
			ON [DEDUCAO].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
		LEFT JOIN DEDUCAO_TIPO
			ON [DEDUCAO].[DEDUCAO_TIPO_ID] = [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID]
	WHERE
		([DEDUCAO].[DEDUCAO_ID] = @DEDUCAO_ID OR @DEDUCAO_ID IS NULL)
		AND ([DEDUCAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([DEDUCAO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
		AND ([DEDUCAO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([DEDUCAO].[DATA_DEDUCAO] = @DATA_DEDUCAO OR @DATA_DEDUCAO IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [DEDUCAO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'DEDUCAO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@DEDUCAO_ID int = null,
	@PLANTAO_ID int = null,
	@DEDUCAO_TIPO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_DEDUCAO datetime = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[DEDUCAO]
			LEFT JOIN PLANTAO
				ON [DEDUCAO].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
			LEFT JOIN DEDUCAO_TIPO
				ON [DEDUCAO].[DEDUCAO_TIPO_ID] = [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID]
		WHERE
			([DEDUCAO].[DEDUCAO_ID] = @DEDUCAO_ID OR @DEDUCAO_ID IS NULL)
			AND ([DEDUCAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
			AND ([DEDUCAO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
			AND ([DEDUCAO].[VALOR] = @VALOR OR @VALOR IS NULL)
			AND ([DEDUCAO].[DATA_DEDUCAO] = @DATA_DEDUCAO OR @DATA_DEDUCAO IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[DEDUCAO].[DEDUCAO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_TIPO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [DEDUCAO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_DEDUCAO' THEN CONVERT(SQL_Variant, [DEDUCAO].[DATA_DEDUCAO])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_TIPO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [DEDUCAO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_DEDUCAO' THEN CONVERT(SQL_Variant, [DEDUCAO].[DATA_DEDUCAO])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[DEDUCAO]
					LEFT JOIN PLANTAO
						ON [DEDUCAO].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
					LEFT JOIN DEDUCAO_TIPO
						ON [DEDUCAO].[DEDUCAO_TIPO_ID] = [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID]
				WHERE
					([DEDUCAO].[DEDUCAO_ID] = @DEDUCAO_ID OR @DEDUCAO_ID IS NULL)
					AND ([DEDUCAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
					AND ([DEDUCAO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
					AND ([DEDUCAO].[VALOR] = @VALOR OR @VALOR IS NULL)
					AND ([DEDUCAO].[DATA_DEDUCAO] = @DATA_DEDUCAO OR @DATA_DEDUCAO IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[DEDUCAO].[DEDUCAO_ID] AS [DEDUCAO_DEDUCAO_ID],
				[DEDUCAO].[PLANTAO_ID] AS [DEDUCAO_PLANTAO_ID],
				[DEDUCAO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_DEDUCAO_TIPO_ID],
				[DEDUCAO].[VALOR] AS [DEDUCAO_VALOR],
				[DEDUCAO].[DATA_DEDUCAO] AS [DEDUCAO_DATA_DEDUCAO],
				[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
				[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
				[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
				[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
				[PLANTAO].[INSS] AS [PLANTAO_INSS],
				[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
				[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
				[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
				[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO],
				[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_TIPO_DEDUCAO_TIPO_ID],
				[DEDUCAO_TIPO].[NOME] AS [DEDUCAO_TIPO_NOME],
				[DEDUCAO].[DEDUCAO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_TIPO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [DEDUCAO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_DEDUCAO' THEN CONVERT(SQL_Variant, [DEDUCAO].[DATA_DEDUCAO])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO].[DEDUCAO_TIPO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [DEDUCAO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_DEDUCAO' THEN CONVERT(SQL_Variant, [DEDUCAO].[DATA_DEDUCAO])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[DEDUCAO]
				LEFT JOIN PLANTAO
					ON [DEDUCAO].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
				LEFT JOIN DEDUCAO_TIPO
					ON [DEDUCAO].[DEDUCAO_TIPO_ID] = [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID]
			WHERE
				([DEDUCAO].[DEDUCAO_ID] = @DEDUCAO_ID OR @DEDUCAO_ID IS NULL)
				AND ([DEDUCAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
				AND ([DEDUCAO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
				AND ([DEDUCAO].[VALOR] = @VALOR OR @VALOR IS NULL)
				AND ([DEDUCAO].[DATA_DEDUCAO] = @DATA_DEDUCAO OR @DATA_DEDUCAO IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [DEDUCAO_ATUALIZAR]
(
	@DEDUCAO_ID int,
	@PLANTAO_ID int = null,
	@DEDUCAO_TIPO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_DEDUCAO datetime = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[DEDUCAO]
	SET
		[PLANTAO_ID] = @PLANTAO_ID,
		[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID,
		[VALOR] = @VALOR,
		[DATA_DEDUCAO] = @DATA_DEDUCAO
	WHERE
		[DEDUCAO_ID] = @DEDUCAO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_INSERIR]
(
	@DEDUCAO_ID int = null OUTPUT,
	@PLANTAO_ID int = null,
	@DEDUCAO_TIPO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_DEDUCAO datetime = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [DEDUCAO]
	(
		[PLANTAO_ID],
		[DEDUCAO_TIPO_ID],
		[VALOR],
		[DATA_DEDUCAO]
	)
	VALUES
	(
		@PLANTAO_ID,
		@DEDUCAO_TIPO_ID,
		@VALOR,
		@DATA_DEDUCAO
	)

	SELECT @DEDUCAO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_EXCLUIR]
(
	@DEDUCAO_ID int = null,
	@PLANTAO_ID int = null,
	@DEDUCAO_TIPO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_DEDUCAO datetime = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[DEDUCAO] 
	WHERE 
		([DEDUCAO].[DEDUCAO_ID] = @DEDUCAO_ID OR @DEDUCAO_ID IS NULL)
		AND ([DEDUCAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([DEDUCAO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
		AND ([DEDUCAO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([DEDUCAO].[DATA_DEDUCAO] = @DATA_DEDUCAO OR @DATA_DEDUCAO IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_TIPO_CARREGAR]
(
	@DEDUCAO_TIPO_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	SELECT
		[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_TIPO_DEDUCAO_TIPO_ID],
		[DEDUCAO_TIPO].[NOME] AS [DEDUCAO_TIPO_NOME]
	FROM
		[DEDUCAO_TIPO]
	WHERE
		([DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
		AND ([DEDUCAO_TIPO].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [DEDUCAO_TIPO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'DEDUCAO_TIPO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@DEDUCAO_TIPO_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[DEDUCAO_TIPO]
		WHERE
			([DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
			AND ([DEDUCAO_TIPO].[NOME] LIKE @NOME OR @NOME IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[NOME])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[NOME])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[DEDUCAO_TIPO]
				WHERE
					([DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
					AND ([DEDUCAO_TIPO].[NOME] LIKE @NOME OR @NOME IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [DEDUCAO_TIPO_DEDUCAO_TIPO_ID],
				[DEDUCAO_TIPO].[NOME] AS [DEDUCAO_TIPO_NOME],
				[DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[NOME])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DEDUCAO_TIPO_ID' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[DEDUCAO_TIPO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [DEDUCAO_TIPO].[NOME])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[DEDUCAO_TIPO]
			WHERE
				([DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
				AND ([DEDUCAO_TIPO].[NOME] LIKE @NOME OR @NOME IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [DEDUCAO_TIPO_ATUALIZAR]
(
	@DEDUCAO_TIPO_ID int,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[DEDUCAO_TIPO]
	SET
		[NOME] = @NOME
	WHERE
		[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_TIPO_INSERIR]
(
	@DEDUCAO_TIPO_ID int = null OUTPUT,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [DEDUCAO_TIPO]
	(
		[NOME]
	)
	VALUES
	(
		@NOME
	)

	SELECT @DEDUCAO_TIPO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [DEDUCAO_TIPO_EXCLUIR]
(
	@DEDUCAO_TIPO_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[DEDUCAO_TIPO] 
	WHERE 
		([DEDUCAO_TIPO].[DEDUCAO_TIPO_ID] = @DEDUCAO_TIPO_ID OR @DEDUCAO_TIPO_ID IS NULL)
		AND ([DEDUCAO_TIPO].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [FATURAMENTO_CARREGAR]
(
	@FATURAMENTO_ID int = null,
	@USUARIO_ID int = null,
	@PROJETO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@STATUS int = null,
	@DATA_FATURAMENTO datetime = null,
	@DATA_RECEBIMENTO datetime = null,
	@DATA_CADASTRO datetime = null
)
AS
BEGIN

	SELECT
		[FATURAMENTO].[FATURAMENTO_ID] AS [FATURAMENTO_FATURAMENTO_ID],
		[FATURAMENTO].[USUARIO_ID] AS [FATURAMENTO_USUARIO_ID],
		[FATURAMENTO].[PROJETO_ID] AS [FATURAMENTO_PROJETO_ID],
		[FATURAMENTO].[VALOR] AS [FATURAMENTO_VALOR],
		[FATURAMENTO].[STATUS] AS [FATURAMENTO_STATUS],
		[FATURAMENTO].[DATA_FATURAMENTO] AS [FATURAMENTO_DATA_FATURAMENTO],
		[FATURAMENTO].[DATA_RECEBIMENTO] AS [FATURAMENTO_DATA_RECEBIMENTO],
		[FATURAMENTO].[DATA_CADASTRO] AS [FATURAMENTO_DATA_CADASTRO],
		[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
		[USUARIO].[NOME] AS [USUARIO_NOME],
		[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
		[USUARIO].[SENHA] AS [USUARIO_SENHA],
		[PROJETO].[PROJETO_ID] AS [PROJETO_PROJETO_ID],
		[PROJETO].[USUARIO_ID] AS [PROJETO_USUARIO_ID],
		[PROJETO].[AGENCIA_ID] AS [PROJETO_AGENCIA_ID],
		[PROJETO].[CLIENTE_ID] AS [PROJETO_CLIENTE_ID],
		[PROJETO].[NOME] AS [PROJETO_NOME],
		[PROJETO].[DESCRICAO] AS [PROJETO_DESCRICAO],
		[PROJETO].[VALOR] AS [PROJETO_VALOR],
		[PROJETO].[SOLICITANTE] AS [PROJETO_SOLICITANTE],
		[PROJETO].[STATUS] AS [PROJETO_STATUS],
		[PROJETO].[DATA_PROSPECCAO] AS [PROJETO_DATA_PROSPECCAO],
		[PROJETO].[DATA_CONTRATACAO] AS [PROJETO_DATA_CONTRATACAO],
		[PROJETO].[LOCAL_TRABALHO] AS [PROJETO_LOCAL_TRABALHO],
		[PROJETO].[GARANTIA_DIAS] AS [PROJETO_GARANTIA_DIAS],
		[PROJETO].[VALIDADE_DIAS] AS [PROJETO_VALIDADE_DIAS],
		[PROJETO].[PRAZO_DIAS] AS [PROJETO_PRAZO_DIAS],
		[PROJETO].[HORAS] AS [PROJETO_HORAS],
		[PROJETO].[PRAZO_PAGAMENTO_DIAS] AS [PROJETO_PRAZO_PAGAMENTO_DIAS],
		[PROJETO].[DATA_CADASTRO] AS [PROJETO_DATA_CADASTRO],
		[PROJETO].[ESCOPO] AS [PROJETO_ESCOPO]
	FROM
		[FATURAMENTO]
		LEFT JOIN USUARIO
			ON [FATURAMENTO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
		LEFT JOIN PROJETO
			ON [FATURAMENTO].[PROJETO_ID] = [PROJETO].[PROJETO_ID]
	WHERE
		([FATURAMENTO].[FATURAMENTO_ID] = @FATURAMENTO_ID OR @FATURAMENTO_ID IS NULL)
		AND ([FATURAMENTO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([FATURAMENTO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
		AND ([FATURAMENTO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([FATURAMENTO].[STATUS] = @STATUS OR @STATUS IS NULL)
		AND ([FATURAMENTO].[DATA_FATURAMENTO] = @DATA_FATURAMENTO OR @DATA_FATURAMENTO IS NULL)
		AND ([FATURAMENTO].[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO OR @DATA_RECEBIMENTO IS NULL)
		AND ([FATURAMENTO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [FATURAMENTO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'FATURAMENTO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@FATURAMENTO_ID int = null,
	@USUARIO_ID int = null,
	@PROJETO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@STATUS int = null,
	@DATA_FATURAMENTO datetime = null,
	@DATA_RECEBIMENTO datetime = null,
	@DATA_CADASTRO datetime = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[FATURAMENTO]
			LEFT JOIN USUARIO
				ON [FATURAMENTO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
			LEFT JOIN PROJETO
				ON [FATURAMENTO].[PROJETO_ID] = [PROJETO].[PROJETO_ID]
		WHERE
			([FATURAMENTO].[FATURAMENTO_ID] = @FATURAMENTO_ID OR @FATURAMENTO_ID IS NULL)
			AND ([FATURAMENTO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
			AND ([FATURAMENTO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
			AND ([FATURAMENTO].[VALOR] = @VALOR OR @VALOR IS NULL)
			AND ([FATURAMENTO].[STATUS] = @STATUS OR @STATUS IS NULL)
			AND ([FATURAMENTO].[DATA_FATURAMENTO] = @DATA_FATURAMENTO OR @DATA_FATURAMENTO IS NULL)
			AND ([FATURAMENTO].[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO OR @DATA_RECEBIMENTO IS NULL)
			AND ([FATURAMENTO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[FATURAMENTO].[FATURAMENTO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'FATURAMENTO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[FATURAMENTO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[PROJETO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [FATURAMENTO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [FATURAMENTO].[STATUS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_FATURAMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_FATURAMENTO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_RECEBIMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_RECEBIMENTO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_CADASTRO])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'FATURAMENTO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[FATURAMENTO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[PROJETO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [FATURAMENTO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [FATURAMENTO].[STATUS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_FATURAMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_FATURAMENTO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_RECEBIMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_RECEBIMENTO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_CADASTRO])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[FATURAMENTO]
					LEFT JOIN USUARIO
						ON [FATURAMENTO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
					LEFT JOIN PROJETO
						ON [FATURAMENTO].[PROJETO_ID] = [PROJETO].[PROJETO_ID]
				WHERE
					([FATURAMENTO].[FATURAMENTO_ID] = @FATURAMENTO_ID OR @FATURAMENTO_ID IS NULL)
					AND ([FATURAMENTO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
					AND ([FATURAMENTO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
					AND ([FATURAMENTO].[VALOR] = @VALOR OR @VALOR IS NULL)
					AND ([FATURAMENTO].[STATUS] = @STATUS OR @STATUS IS NULL)
					AND ([FATURAMENTO].[DATA_FATURAMENTO] = @DATA_FATURAMENTO OR @DATA_FATURAMENTO IS NULL)
					AND ([FATURAMENTO].[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO OR @DATA_RECEBIMENTO IS NULL)
					AND ([FATURAMENTO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[FATURAMENTO].[FATURAMENTO_ID] AS [FATURAMENTO_FATURAMENTO_ID],
				[FATURAMENTO].[USUARIO_ID] AS [FATURAMENTO_USUARIO_ID],
				[FATURAMENTO].[PROJETO_ID] AS [FATURAMENTO_PROJETO_ID],
				[FATURAMENTO].[VALOR] AS [FATURAMENTO_VALOR],
				[FATURAMENTO].[STATUS] AS [FATURAMENTO_STATUS],
				[FATURAMENTO].[DATA_FATURAMENTO] AS [FATURAMENTO_DATA_FATURAMENTO],
				[FATURAMENTO].[DATA_RECEBIMENTO] AS [FATURAMENTO_DATA_RECEBIMENTO],
				[FATURAMENTO].[DATA_CADASTRO] AS [FATURAMENTO_DATA_CADASTRO],
				[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
				[USUARIO].[NOME] AS [USUARIO_NOME],
				[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
				[USUARIO].[SENHA] AS [USUARIO_SENHA],
				[PROJETO].[PROJETO_ID] AS [PROJETO_PROJETO_ID],
				[PROJETO].[USUARIO_ID] AS [PROJETO_USUARIO_ID],
				[PROJETO].[AGENCIA_ID] AS [PROJETO_AGENCIA_ID],
				[PROJETO].[CLIENTE_ID] AS [PROJETO_CLIENTE_ID],
				[PROJETO].[NOME] AS [PROJETO_NOME],
				[PROJETO].[DESCRICAO] AS [PROJETO_DESCRICAO],
				[PROJETO].[VALOR] AS [PROJETO_VALOR],
				[PROJETO].[SOLICITANTE] AS [PROJETO_SOLICITANTE],
				[PROJETO].[STATUS] AS [PROJETO_STATUS],
				[PROJETO].[DATA_PROSPECCAO] AS [PROJETO_DATA_PROSPECCAO],
				[PROJETO].[DATA_CONTRATACAO] AS [PROJETO_DATA_CONTRATACAO],
				[PROJETO].[LOCAL_TRABALHO] AS [PROJETO_LOCAL_TRABALHO],
				[PROJETO].[GARANTIA_DIAS] AS [PROJETO_GARANTIA_DIAS],
				[PROJETO].[VALIDADE_DIAS] AS [PROJETO_VALIDADE_DIAS],
				[PROJETO].[PRAZO_DIAS] AS [PROJETO_PRAZO_DIAS],
				[PROJETO].[HORAS] AS [PROJETO_HORAS],
				[PROJETO].[PRAZO_PAGAMENTO_DIAS] AS [PROJETO_PRAZO_PAGAMENTO_DIAS],
				[PROJETO].[DATA_CADASTRO] AS [PROJETO_DATA_CADASTRO],
				[PROJETO].[ESCOPO] AS [PROJETO_ESCOPO],
				[FATURAMENTO].[FATURAMENTO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'FATURAMENTO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[FATURAMENTO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[PROJETO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [FATURAMENTO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [FATURAMENTO].[STATUS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_FATURAMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_FATURAMENTO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_RECEBIMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_RECEBIMENTO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'FATURAMENTO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[FATURAMENTO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [FATURAMENTO].[PROJETO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [FATURAMENTO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [FATURAMENTO].[STATUS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_FATURAMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_FATURAMENTO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_RECEBIMENTO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_RECEBIMENTO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [FATURAMENTO].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[FATURAMENTO]
				LEFT JOIN USUARIO
					ON [FATURAMENTO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
				LEFT JOIN PROJETO
					ON [FATURAMENTO].[PROJETO_ID] = [PROJETO].[PROJETO_ID]
			WHERE
				([FATURAMENTO].[FATURAMENTO_ID] = @FATURAMENTO_ID OR @FATURAMENTO_ID IS NULL)
				AND ([FATURAMENTO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
				AND ([FATURAMENTO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
				AND ([FATURAMENTO].[VALOR] = @VALOR OR @VALOR IS NULL)
				AND ([FATURAMENTO].[STATUS] = @STATUS OR @STATUS IS NULL)
				AND ([FATURAMENTO].[DATA_FATURAMENTO] = @DATA_FATURAMENTO OR @DATA_FATURAMENTO IS NULL)
				AND ([FATURAMENTO].[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO OR @DATA_RECEBIMENTO IS NULL)
				AND ([FATURAMENTO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [FATURAMENTO_ATUALIZAR]
(
	@FATURAMENTO_ID int,
	@USUARIO_ID int = null,
	@PROJETO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@STATUS int = null,
	@DATA_FATURAMENTO datetime = null,
	@DATA_RECEBIMENTO datetime = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[FATURAMENTO]
	SET
		[USUARIO_ID] = @USUARIO_ID,
		[PROJETO_ID] = @PROJETO_ID,
		[VALOR] = @VALOR,
		[STATUS] = @STATUS,
		[DATA_FATURAMENTO] = @DATA_FATURAMENTO,
		[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO,
		[DATA_CADASTRO] = @DATA_CADASTRO
	WHERE
		[FATURAMENTO_ID] = @FATURAMENTO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [FATURAMENTO_INSERIR]
(
	@FATURAMENTO_ID int = null OUTPUT,
	@USUARIO_ID int = null,
	@PROJETO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@STATUS int = null,
	@DATA_FATURAMENTO datetime = null,
	@DATA_RECEBIMENTO datetime = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [FATURAMENTO]
	(
		[USUARIO_ID],
		[PROJETO_ID],
		[VALOR],
		[STATUS],
		[DATA_FATURAMENTO],
		[DATA_RECEBIMENTO],
		[DATA_CADASTRO]
	)
	VALUES
	(
		@USUARIO_ID,
		@PROJETO_ID,
		@VALOR,
		@STATUS,
		@DATA_FATURAMENTO,
		@DATA_RECEBIMENTO,
		@DATA_CADASTRO
	)

	SELECT @FATURAMENTO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [FATURAMENTO_EXCLUIR]
(
	@FATURAMENTO_ID int = null,
	@USUARIO_ID int = null,
	@PROJETO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@STATUS int = null,
	@DATA_FATURAMENTO datetime = null,
	@DATA_RECEBIMENTO datetime = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[FATURAMENTO] 
	WHERE 
		([FATURAMENTO].[FATURAMENTO_ID] = @FATURAMENTO_ID OR @FATURAMENTO_ID IS NULL)
		AND ([FATURAMENTO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([FATURAMENTO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
		AND ([FATURAMENTO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([FATURAMENTO].[STATUS] = @STATUS OR @STATUS IS NULL)
		AND ([FATURAMENTO].[DATA_FATURAMENTO] = @DATA_FATURAMENTO OR @DATA_FATURAMENTO IS NULL)
		AND ([FATURAMENTO].[DATA_RECEBIMENTO] = @DATA_RECEBIMENTO OR @DATA_RECEBIMENTO IS NULL)
		AND ([FATURAMENTO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [HOSPITAL_CARREGAR]
(
	@HOSPITAL_ID int = null,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	SELECT
		[HOSPITAL].[HOSPITAL_ID] AS [HOSPITAL_HOSPITAL_ID],
		[HOSPITAL].[CIDADE_ID] AS [HOSPITAL_CIDADE_ID],
		[HOSPITAL].[NOME] AS [HOSPITAL_NOME],
		[CIDADE].[CIDADE_ID] AS [CIDADE_CIDADE_ID],
		[CIDADE].[NOME] AS [CIDADE_NOME]
	FROM
		[HOSPITAL]
		LEFT JOIN CIDADE
			ON [HOSPITAL].[CIDADE_ID] = [CIDADE].[CIDADE_ID]
	WHERE
		([HOSPITAL].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
		AND ([HOSPITAL].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
		AND ([HOSPITAL].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [HOSPITAL_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'HOSPITAL_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@HOSPITAL_ID int = null,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[HOSPITAL]
			LEFT JOIN CIDADE
				ON [HOSPITAL].[CIDADE_ID] = [CIDADE].[CIDADE_ID]
		WHERE
			([HOSPITAL].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
			AND ([HOSPITAL].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
			AND ([HOSPITAL].[NOME] LIKE @NOME OR @NOME IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[HOSPITAL].[HOSPITAL_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[HOSPITAL_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[CIDADE_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [HOSPITAL].[NOME])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[HOSPITAL_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[CIDADE_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [HOSPITAL].[NOME])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[HOSPITAL]
					LEFT JOIN CIDADE
						ON [HOSPITAL].[CIDADE_ID] = [CIDADE].[CIDADE_ID]
				WHERE
					([HOSPITAL].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
					AND ([HOSPITAL].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
					AND ([HOSPITAL].[NOME] LIKE @NOME OR @NOME IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[HOSPITAL].[HOSPITAL_ID] AS [HOSPITAL_HOSPITAL_ID],
				[HOSPITAL].[CIDADE_ID] AS [HOSPITAL_CIDADE_ID],
				[HOSPITAL].[NOME] AS [HOSPITAL_NOME],
				[CIDADE].[CIDADE_ID] AS [CIDADE_CIDADE_ID],
				[CIDADE].[NOME] AS [CIDADE_NOME],
				[HOSPITAL].[HOSPITAL_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[HOSPITAL_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[CIDADE_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [HOSPITAL].[NOME])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[HOSPITAL_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CIDADE_ID' THEN CONVERT(SQL_Variant, [HOSPITAL].[CIDADE_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [HOSPITAL].[NOME])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[HOSPITAL]
				LEFT JOIN CIDADE
					ON [HOSPITAL].[CIDADE_ID] = [CIDADE].[CIDADE_ID]
			WHERE
				([HOSPITAL].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
				AND ([HOSPITAL].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
				AND ([HOSPITAL].[NOME] LIKE @NOME OR @NOME IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [HOSPITAL_ATUALIZAR]
(
	@HOSPITAL_ID int,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[HOSPITAL]
	SET
		[CIDADE_ID] = @CIDADE_ID,
		[NOME] = @NOME
	WHERE
		[HOSPITAL_ID] = @HOSPITAL_ID

	RETURN @@Error

GO
CREATE PROCEDURE [HOSPITAL_INSERIR]
(
	@HOSPITAL_ID int = null OUTPUT,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [HOSPITAL]
	(
		[CIDADE_ID],
		[NOME]
	)
	VALUES
	(
		@CIDADE_ID,
		@NOME
	)

	SELECT @HOSPITAL_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [HOSPITAL_EXCLUIR]
(
	@HOSPITAL_ID int = null,
	@CIDADE_ID int = null,
	@NOME varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[HOSPITAL] 
	WHERE 
		([HOSPITAL].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
		AND ([HOSPITAL].[CIDADE_ID] = @CIDADE_ID OR @CIDADE_ID IS NULL)
		AND ([HOSPITAL].[NOME] = @NOME OR @NOME IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [INSS_CARREGAR]
(
	@INSS_ID int = null,
	@PLANTAO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_CADASTRO datetime = null
)
AS
BEGIN

	SELECT
		[INSS].[INSS_ID] AS [INSS_INSS_ID],
		[INSS].[PLANTAO_ID] AS [INSS_PLANTAO_ID],
		[INSS].[VALOR] AS [INSS_VALOR],
		[INSS].[DATA_CADASTRO] AS [INSS_DATA_CADASTRO],
		[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
		[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
		[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
		[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
		[PLANTAO].[INSS] AS [PLANTAO_INSS],
		[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
		[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
		[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
		[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO]
	FROM
		[INSS]
		LEFT JOIN PLANTAO
			ON [INSS].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
	WHERE
		([INSS].[INSS_ID] = @INSS_ID OR @INSS_ID IS NULL)
		AND ([INSS].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([INSS].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([INSS].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [INSS_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'INSS_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@INSS_ID int = null,
	@PLANTAO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_CADASTRO datetime = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[INSS]
			LEFT JOIN PLANTAO
				ON [INSS].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
		WHERE
			([INSS].[INSS_ID] = @INSS_ID OR @INSS_ID IS NULL)
			AND ([INSS].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
			AND ([INSS].[VALOR] = @VALOR OR @VALOR IS NULL)
			AND ([INSS].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[INSS].[INSS_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'INSS_ID' THEN CONVERT(SQL_Variant, [INSS].[INSS_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [INSS].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [INSS].[VALOR])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [INSS].[DATA_CADASTRO])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'INSS_ID' THEN CONVERT(SQL_Variant, [INSS].[INSS_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [INSS].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [INSS].[VALOR])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [INSS].[DATA_CADASTRO])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[INSS]
					LEFT JOIN PLANTAO
						ON [INSS].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
				WHERE
					([INSS].[INSS_ID] = @INSS_ID OR @INSS_ID IS NULL)
					AND ([INSS].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
					AND ([INSS].[VALOR] = @VALOR OR @VALOR IS NULL)
					AND ([INSS].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[INSS].[INSS_ID] AS [INSS_INSS_ID],
				[INSS].[PLANTAO_ID] AS [INSS_PLANTAO_ID],
				[INSS].[VALOR] AS [INSS_VALOR],
				[INSS].[DATA_CADASTRO] AS [INSS_DATA_CADASTRO],
				[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
				[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
				[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
				[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
				[PLANTAO].[INSS] AS [PLANTAO_INSS],
				[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
				[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
				[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
				[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO],
				[INSS].[INSS_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'INSS_ID' THEN CONVERT(SQL_Variant, [INSS].[INSS_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [INSS].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [INSS].[VALOR])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [INSS].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'INSS_ID' THEN CONVERT(SQL_Variant, [INSS].[INSS_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [INSS].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [INSS].[VALOR])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [INSS].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[INSS]
				LEFT JOIN PLANTAO
					ON [INSS].[PLANTAO_ID] = [PLANTAO].[PLANTAO_ID]
			WHERE
				([INSS].[INSS_ID] = @INSS_ID OR @INSS_ID IS NULL)
				AND ([INSS].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
				AND ([INSS].[VALOR] = @VALOR OR @VALOR IS NULL)
				AND ([INSS].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [INSS_ATUALIZAR]
(
	@INSS_ID int,
	@PLANTAO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[INSS]
	SET
		[PLANTAO_ID] = @PLANTAO_ID,
		[VALOR] = @VALOR,
		[DATA_CADASTRO] = @DATA_CADASTRO
	WHERE
		[INSS_ID] = @INSS_ID

	RETURN @@Error

GO
CREATE PROCEDURE [INSS_INSERIR]
(
	@INSS_ID int = null OUTPUT,
	@PLANTAO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [INSS]
	(
		[PLANTAO_ID],
		[VALOR],
		[DATA_CADASTRO]
	)
	VALUES
	(
		@PLANTAO_ID,
		@VALOR,
		@DATA_CADASTRO
	)

	SELECT @INSS_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [INSS_EXCLUIR]
(
	@INSS_ID int = null,
	@PLANTAO_ID int = null,
	@VALOR decimal(18, 2) = null,
	@DATA_CADASTRO datetime = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[INSS] 
	WHERE 
		([INSS].[INSS_ID] = @INSS_ID OR @INSS_ID IS NULL)
		AND ([INSS].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([INSS].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([INSS].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [PLANTAO_CARREGAR]
(
	@PLANTAO_ID int = null,
	@HOSPITAL_ID int = null,
	@VALOR decimal(18, 2) = null,
	@CNPJ bit = null,
	@INSS bit = null,
	@DATA_PLANTAO datetime = null,
	@DATA_PAGAMENTO datetime = null,
	@DATA_CADASTRO datetime = null,
	@RECEBIDO bit = null
)
AS
BEGIN

	SELECT
		[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
		[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
		[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
		[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
		[PLANTAO].[INSS] AS [PLANTAO_INSS],
		[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
		[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
		[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
		[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO],
		[HOSPITAL].[HOSPITAL_ID] AS [HOSPITAL_HOSPITAL_ID],
		[HOSPITAL].[CIDADE_ID] AS [HOSPITAL_CIDADE_ID],
		[HOSPITAL].[NOME] AS [HOSPITAL_NOME]
	FROM
		[PLANTAO]
		LEFT JOIN HOSPITAL
			ON [PLANTAO].[HOSPITAL_ID] = [HOSPITAL].[HOSPITAL_ID]
	WHERE
		([PLANTAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([PLANTAO].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
		AND ([PLANTAO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([PLANTAO].[CNPJ] = @CNPJ OR @CNPJ IS NULL)
		AND ([PLANTAO].[INSS] = @INSS OR @INSS IS NULL)
		AND ([PLANTAO].[DATA_PLANTAO] = @DATA_PLANTAO OR @DATA_PLANTAO IS NULL)
		AND ([PLANTAO].[DATA_PAGAMENTO] = @DATA_PAGAMENTO OR @DATA_PAGAMENTO IS NULL)
		AND ([PLANTAO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		AND ([PLANTAO].[RECEBIDO] = @RECEBIDO OR @RECEBIDO IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [PLANTAO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'PLANTAO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@PLANTAO_ID int = null,
	@HOSPITAL_ID int = null,
	@VALOR decimal(18, 2) = null,
	@CNPJ bit = null,
	@INSS bit = null,
	@DATA_PLANTAO datetime = null,
	@DATA_PAGAMENTO datetime = null,
	@DATA_CADASTRO datetime = null,
	@RECEBIDO bit = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[PLANTAO]
			LEFT JOIN HOSPITAL
				ON [PLANTAO].[HOSPITAL_ID] = [HOSPITAL].[HOSPITAL_ID]
		WHERE
			([PLANTAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
			AND ([PLANTAO].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
			AND ([PLANTAO].[VALOR] = @VALOR OR @VALOR IS NULL)
			AND ([PLANTAO].[CNPJ] = @CNPJ OR @CNPJ IS NULL)
			AND ([PLANTAO].[INSS] = @INSS OR @INSS IS NULL)
			AND ([PLANTAO].[DATA_PLANTAO] = @DATA_PLANTAO OR @DATA_PLANTAO IS NULL)
			AND ([PLANTAO].[DATA_PAGAMENTO] = @DATA_PAGAMENTO OR @DATA_PAGAMENTO IS NULL)
			AND ([PLANTAO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			AND ([PLANTAO].[RECEBIDO] = @RECEBIDO OR @RECEBIDO IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[PLANTAO].[PLANTAO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[HOSPITAL_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PLANTAO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CNPJ' THEN CONVERT(SQL_Variant, [PLANTAO].[CNPJ])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'INSS' THEN CONVERT(SQL_Variant, [PLANTAO].[INSS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PLANTAO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PLANTAO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PAGAMENTO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PAGAMENTO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_CADASTRO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'RECEBIDO' THEN CONVERT(SQL_Variant, [PLANTAO].[RECEBIDO])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[PLANTAO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[HOSPITAL_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PLANTAO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CNPJ' THEN CONVERT(SQL_Variant, [PLANTAO].[CNPJ])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'INSS' THEN CONVERT(SQL_Variant, [PLANTAO].[INSS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PLANTAO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PLANTAO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PAGAMENTO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PAGAMENTO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_CADASTRO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'RECEBIDO' THEN CONVERT(SQL_Variant, [PLANTAO].[RECEBIDO])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[PLANTAO]
					LEFT JOIN HOSPITAL
						ON [PLANTAO].[HOSPITAL_ID] = [HOSPITAL].[HOSPITAL_ID]
				WHERE
					([PLANTAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
					AND ([PLANTAO].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
					AND ([PLANTAO].[VALOR] = @VALOR OR @VALOR IS NULL)
					AND ([PLANTAO].[CNPJ] = @CNPJ OR @CNPJ IS NULL)
					AND ([PLANTAO].[INSS] = @INSS OR @INSS IS NULL)
					AND ([PLANTAO].[DATA_PLANTAO] = @DATA_PLANTAO OR @DATA_PLANTAO IS NULL)
					AND ([PLANTAO].[DATA_PAGAMENTO] = @DATA_PAGAMENTO OR @DATA_PAGAMENTO IS NULL)
					AND ([PLANTAO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
					AND ([PLANTAO].[RECEBIDO] = @RECEBIDO OR @RECEBIDO IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[PLANTAO].[PLANTAO_ID] AS [PLANTAO_PLANTAO_ID],
				[PLANTAO].[HOSPITAL_ID] AS [PLANTAO_HOSPITAL_ID],
				[PLANTAO].[VALOR] AS [PLANTAO_VALOR],
				[PLANTAO].[CNPJ] AS [PLANTAO_CNPJ],
				[PLANTAO].[INSS] AS [PLANTAO_INSS],
				[PLANTAO].[DATA_PLANTAO] AS [PLANTAO_DATA_PLANTAO],
				[PLANTAO].[DATA_PAGAMENTO] AS [PLANTAO_DATA_PAGAMENTO],
				[PLANTAO].[DATA_CADASTRO] AS [PLANTAO_DATA_CADASTRO],
				[PLANTAO].[RECEBIDO] AS [PLANTAO_RECEBIDO],
				[HOSPITAL].[HOSPITAL_ID] AS [HOSPITAL_HOSPITAL_ID],
				[HOSPITAL].[CIDADE_ID] AS [HOSPITAL_CIDADE_ID],
				[HOSPITAL].[NOME] AS [HOSPITAL_NOME],
				[PLANTAO].[PLANTAO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[HOSPITAL_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PLANTAO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CNPJ' THEN CONVERT(SQL_Variant, [PLANTAO].[CNPJ])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'INSS' THEN CONVERT(SQL_Variant, [PLANTAO].[INSS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PLANTAO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PLANTAO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PAGAMENTO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PAGAMENTO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_CADASTRO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'RECEBIDO' THEN CONVERT(SQL_Variant, [PLANTAO].[RECEBIDO])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PLANTAO_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[PLANTAO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HOSPITAL_ID' THEN CONVERT(SQL_Variant, [PLANTAO].[HOSPITAL_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PLANTAO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CNPJ' THEN CONVERT(SQL_Variant, [PLANTAO].[CNPJ])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'INSS' THEN CONVERT(SQL_Variant, [PLANTAO].[INSS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PLANTAO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PLANTAO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PAGAMENTO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_PAGAMENTO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PLANTAO].[DATA_CADASTRO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'RECEBIDO' THEN CONVERT(SQL_Variant, [PLANTAO].[RECEBIDO])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[PLANTAO]
				LEFT JOIN HOSPITAL
					ON [PLANTAO].[HOSPITAL_ID] = [HOSPITAL].[HOSPITAL_ID]
			WHERE
				([PLANTAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
				AND ([PLANTAO].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
				AND ([PLANTAO].[VALOR] = @VALOR OR @VALOR IS NULL)
				AND ([PLANTAO].[CNPJ] = @CNPJ OR @CNPJ IS NULL)
				AND ([PLANTAO].[INSS] = @INSS OR @INSS IS NULL)
				AND ([PLANTAO].[DATA_PLANTAO] = @DATA_PLANTAO OR @DATA_PLANTAO IS NULL)
				AND ([PLANTAO].[DATA_PAGAMENTO] = @DATA_PAGAMENTO OR @DATA_PAGAMENTO IS NULL)
				AND ([PLANTAO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
				AND ([PLANTAO].[RECEBIDO] = @RECEBIDO OR @RECEBIDO IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [PLANTAO_ATUALIZAR]
(
	@PLANTAO_ID int,
	@HOSPITAL_ID int = null,
	@VALOR decimal(18, 2) = null,
	@CNPJ bit = null,
	@INSS bit = null,
	@DATA_PLANTAO datetime = null,
	@DATA_PAGAMENTO datetime = null,
	@DATA_CADASTRO datetime = null,
	@RECEBIDO bit = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[PLANTAO]
	SET
		[HOSPITAL_ID] = @HOSPITAL_ID,
		[VALOR] = @VALOR,
		[CNPJ] = @CNPJ,
		[INSS] = @INSS,
		[DATA_PLANTAO] = @DATA_PLANTAO,
		[DATA_PAGAMENTO] = @DATA_PAGAMENTO,
		[DATA_CADASTRO] = @DATA_CADASTRO,
		[RECEBIDO] = @RECEBIDO
	WHERE
		[PLANTAO_ID] = @PLANTAO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [PLANTAO_INSERIR]
(
	@PLANTAO_ID int = null OUTPUT,
	@HOSPITAL_ID int = null,
	@VALOR decimal(18, 2) = null,
	@CNPJ bit = null,
	@INSS bit = null,
	@DATA_PLANTAO datetime = null,
	@DATA_PAGAMENTO datetime = null,
	@DATA_CADASTRO datetime = null,
	@RECEBIDO bit = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [PLANTAO]
	(
		[HOSPITAL_ID],
		[VALOR],
		[CNPJ],
		[INSS],
		[DATA_PLANTAO],
		[DATA_PAGAMENTO],
		[DATA_CADASTRO],
		[RECEBIDO]
	)
	VALUES
	(
		@HOSPITAL_ID,
		@VALOR,
		@CNPJ,
		@INSS,
		@DATA_PLANTAO,
		@DATA_PAGAMENTO,
		@DATA_CADASTRO,
		@RECEBIDO
	)

	SELECT @PLANTAO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [PLANTAO_EXCLUIR]
(
	@PLANTAO_ID int = null,
	@HOSPITAL_ID int = null,
	@VALOR decimal(18, 2) = null,
	@CNPJ bit = null,
	@INSS bit = null,
	@DATA_PLANTAO datetime = null,
	@DATA_PAGAMENTO datetime = null,
	@DATA_CADASTRO datetime = null,
	@RECEBIDO bit = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[PLANTAO] 
	WHERE 
		([PLANTAO].[PLANTAO_ID] = @PLANTAO_ID OR @PLANTAO_ID IS NULL)
		AND ([PLANTAO].[HOSPITAL_ID] = @HOSPITAL_ID OR @HOSPITAL_ID IS NULL)
		AND ([PLANTAO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([PLANTAO].[CNPJ] = @CNPJ OR @CNPJ IS NULL)
		AND ([PLANTAO].[INSS] = @INSS OR @INSS IS NULL)
		AND ([PLANTAO].[DATA_PLANTAO] = @DATA_PLANTAO OR @DATA_PLANTAO IS NULL)
		AND ([PLANTAO].[DATA_PAGAMENTO] = @DATA_PAGAMENTO OR @DATA_PAGAMENTO IS NULL)
		AND ([PLANTAO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		AND ([PLANTAO].[RECEBIDO] = @RECEBIDO OR @RECEBIDO IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [PROJETO_CARREGAR]
(
	@PROJETO_ID int = null,
	@USUARIO_ID int = null,
	@AGENCIA_ID int = null,
	@CLIENTE_ID int = null,
	@NOME varchar(255) = null,
	@DESCRICAO varchar(255) = null,
	@VALOR decimal(18, 2) = null,
	@SOLICITANTE varchar(255) = null,
	@STATUS int = null,
	@DATA_PROSPECCAO datetime = null,
	@DATA_CONTRATACAO datetime = null,
	@LOCAL_TRABALHO int = null,
	@GARANTIA_DIAS int = null,
	@VALIDADE_DIAS int = null,
	@PRAZO_DIAS int = null,
	@HORAS int = null,
	@PRAZO_PAGAMENTO_DIAS int = null,
	@DATA_CADASTRO datetime = null,
	@ESCOPO text = null
)
AS
BEGIN

	SELECT
		[PROJETO].[PROJETO_ID] AS [PROJETO_PROJETO_ID],
		[PROJETO].[USUARIO_ID] AS [PROJETO_USUARIO_ID],
		[PROJETO].[AGENCIA_ID] AS [PROJETO_AGENCIA_ID],
		[PROJETO].[CLIENTE_ID] AS [PROJETO_CLIENTE_ID],
		[PROJETO].[NOME] AS [PROJETO_NOME],
		[PROJETO].[DESCRICAO] AS [PROJETO_DESCRICAO],
		[PROJETO].[VALOR] AS [PROJETO_VALOR],
		[PROJETO].[SOLICITANTE] AS [PROJETO_SOLICITANTE],
		[PROJETO].[STATUS] AS [PROJETO_STATUS],
		[PROJETO].[DATA_PROSPECCAO] AS [PROJETO_DATA_PROSPECCAO],
		[PROJETO].[DATA_CONTRATACAO] AS [PROJETO_DATA_CONTRATACAO],
		[PROJETO].[LOCAL_TRABALHO] AS [PROJETO_LOCAL_TRABALHO],
		[PROJETO].[GARANTIA_DIAS] AS [PROJETO_GARANTIA_DIAS],
		[PROJETO].[VALIDADE_DIAS] AS [PROJETO_VALIDADE_DIAS],
		[PROJETO].[PRAZO_DIAS] AS [PROJETO_PRAZO_DIAS],
		[PROJETO].[HORAS] AS [PROJETO_HORAS],
		[PROJETO].[PRAZO_PAGAMENTO_DIAS] AS [PROJETO_PRAZO_PAGAMENTO_DIAS],
		[PROJETO].[DATA_CADASTRO] AS [PROJETO_DATA_CADASTRO],
		[PROJETO].[ESCOPO] AS [PROJETO_ESCOPO],
		[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
		[USUARIO].[NOME] AS [USUARIO_NOME],
		[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
		[USUARIO].[SENHA] AS [USUARIO_SENHA],
		[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
		[AGENCIA].[NOME] AS [AGENCIA_NOME],
		[CLIENTE].[CLIENTE_ID] AS [CLIENTE_CLIENTE_ID],
		[CLIENTE].[AGENCIA_ID] AS [CLIENTE_AGENCIA_ID],
		[CLIENTE].[NOME] AS [CLIENTE_NOME]
	FROM
		[PROJETO]
		LEFT JOIN USUARIO
			ON [PROJETO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
		LEFT JOIN AGENCIA
			ON [PROJETO].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
		LEFT JOIN CLIENTE
			ON [PROJETO].[CLIENTE_ID] = [CLIENTE].[CLIENTE_ID]
	WHERE
		([PROJETO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
		AND ([PROJETO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([PROJETO].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([PROJETO].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
		AND ([PROJETO].[NOME] = @NOME OR @NOME IS NULL)
		AND ([PROJETO].[DESCRICAO] = @DESCRICAO OR @DESCRICAO IS NULL)
		AND ([PROJETO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([PROJETO].[SOLICITANTE] = @SOLICITANTE OR @SOLICITANTE IS NULL)
		AND ([PROJETO].[STATUS] = @STATUS OR @STATUS IS NULL)
		AND ([PROJETO].[DATA_PROSPECCAO] = @DATA_PROSPECCAO OR @DATA_PROSPECCAO IS NULL)
		AND ([PROJETO].[DATA_CONTRATACAO] = @DATA_CONTRATACAO OR @DATA_CONTRATACAO IS NULL)
		AND ([PROJETO].[LOCAL_TRABALHO] = @LOCAL_TRABALHO OR @LOCAL_TRABALHO IS NULL)
		AND ([PROJETO].[GARANTIA_DIAS] = @GARANTIA_DIAS OR @GARANTIA_DIAS IS NULL)
		AND ([PROJETO].[VALIDADE_DIAS] = @VALIDADE_DIAS OR @VALIDADE_DIAS IS NULL)
		AND ([PROJETO].[PRAZO_DIAS] = @PRAZO_DIAS OR @PRAZO_DIAS IS NULL)
		AND ([PROJETO].[HORAS] = @HORAS OR @HORAS IS NULL)
		AND ([PROJETO].[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS OR @PRAZO_PAGAMENTO_DIAS IS NULL)
		AND ([PROJETO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		AND (CONVERT(VARCHAR(8000), [PROJETO].[ESCOPO]) = CONVERT(VARCHAR(8000), @ESCOPO) OR @ESCOPO IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [PROJETO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'PROJETO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@PROJETO_ID int = null,
	@USUARIO_ID int = null,
	@AGENCIA_ID int = null,
	@CLIENTE_ID int = null,
	@NOME varchar(255) = null,
	@DESCRICAO varchar(255) = null,
	@VALOR decimal(18, 2) = null,
	@SOLICITANTE varchar(255) = null,
	@STATUS int = null,
	@DATA_PROSPECCAO datetime = null,
	@DATA_CONTRATACAO datetime = null,
	@LOCAL_TRABALHO int = null,
	@GARANTIA_DIAS int = null,
	@VALIDADE_DIAS int = null,
	@PRAZO_DIAS int = null,
	@HORAS int = null,
	@PRAZO_PAGAMENTO_DIAS int = null,
	@DATA_CADASTRO datetime = null,
	@ESCOPO text = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[PROJETO]
			LEFT JOIN USUARIO
				ON [PROJETO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
			LEFT JOIN AGENCIA
				ON [PROJETO].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
			LEFT JOIN CLIENTE
				ON [PROJETO].[CLIENTE_ID] = [CLIENTE].[CLIENTE_ID]
		WHERE
			([PROJETO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
			AND ([PROJETO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
			AND ([PROJETO].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
			AND ([PROJETO].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
			AND ([PROJETO].[NOME] LIKE @NOME OR @NOME IS NULL)
			AND ([PROJETO].[DESCRICAO] LIKE @DESCRICAO OR @DESCRICAO IS NULL)
			AND ([PROJETO].[VALOR] = @VALOR OR @VALOR IS NULL)
			AND ([PROJETO].[SOLICITANTE] LIKE @SOLICITANTE OR @SOLICITANTE IS NULL)
			AND ([PROJETO].[STATUS] = @STATUS OR @STATUS IS NULL)
			AND ([PROJETO].[DATA_PROSPECCAO] = @DATA_PROSPECCAO OR @DATA_PROSPECCAO IS NULL)
			AND ([PROJETO].[DATA_CONTRATACAO] = @DATA_CONTRATACAO OR @DATA_CONTRATACAO IS NULL)
			AND ([PROJETO].[LOCAL_TRABALHO] = @LOCAL_TRABALHO OR @LOCAL_TRABALHO IS NULL)
			AND ([PROJETO].[GARANTIA_DIAS] = @GARANTIA_DIAS OR @GARANTIA_DIAS IS NULL)
			AND ([PROJETO].[VALIDADE_DIAS] = @VALIDADE_DIAS OR @VALIDADE_DIAS IS NULL)
			AND ([PROJETO].[PRAZO_DIAS] = @PRAZO_DIAS OR @PRAZO_DIAS IS NULL)
			AND ([PROJETO].[HORAS] = @HORAS OR @HORAS IS NULL)
			AND ([PROJETO].[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS OR @PRAZO_PAGAMENTO_DIAS IS NULL)
			AND ([PROJETO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			AND (CONVERT(VARCHAR(8000), [PROJETO].[ESCOPO]) = CONVERT(VARCHAR(8000), @ESCOPO) OR @ESCOPO IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[PROJETO].[PROJETO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[PROJETO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [PROJETO].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [PROJETO].[CLIENTE_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [PROJETO].[NOME])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DESCRICAO' THEN CONVERT(SQL_Variant, [PROJETO].[DESCRICAO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PROJETO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'SOLICITANTE' THEN CONVERT(SQL_Variant, [PROJETO].[SOLICITANTE])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [PROJETO].[STATUS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PROSPECCAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_PROSPECCAO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CONTRATACAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CONTRATACAO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'LOCAL_TRABALHO' THEN CONVERT(SQL_Variant, [PROJETO].[LOCAL_TRABALHO])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'GARANTIA_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[GARANTIA_DIAS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALIDADE_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[VALIDADE_DIAS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PRAZO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_DIAS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HORAS' THEN CONVERT(SQL_Variant, [PROJETO].[HORAS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PRAZO_PAGAMENTO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_PAGAMENTO_DIAS])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CADASTRO])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[PROJETO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [PROJETO].[AGENCIA_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [PROJETO].[CLIENTE_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [PROJETO].[NOME])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DESCRICAO' THEN CONVERT(SQL_Variant, [PROJETO].[DESCRICAO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PROJETO].[VALOR])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'SOLICITANTE' THEN CONVERT(SQL_Variant, [PROJETO].[SOLICITANTE])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [PROJETO].[STATUS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PROSPECCAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_PROSPECCAO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CONTRATACAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CONTRATACAO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'LOCAL_TRABALHO' THEN CONVERT(SQL_Variant, [PROJETO].[LOCAL_TRABALHO])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'GARANTIA_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[GARANTIA_DIAS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALIDADE_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[VALIDADE_DIAS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PRAZO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_DIAS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HORAS' THEN CONVERT(SQL_Variant, [PROJETO].[HORAS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PRAZO_PAGAMENTO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_PAGAMENTO_DIAS])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CADASTRO])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[PROJETO]
					LEFT JOIN USUARIO
						ON [PROJETO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
					LEFT JOIN AGENCIA
						ON [PROJETO].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
					LEFT JOIN CLIENTE
						ON [PROJETO].[CLIENTE_ID] = [CLIENTE].[CLIENTE_ID]
				WHERE
					([PROJETO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
					AND ([PROJETO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
					AND ([PROJETO].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
					AND ([PROJETO].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
					AND ([PROJETO].[NOME] LIKE @NOME OR @NOME IS NULL)
					AND ([PROJETO].[DESCRICAO] LIKE @DESCRICAO OR @DESCRICAO IS NULL)
					AND ([PROJETO].[VALOR] = @VALOR OR @VALOR IS NULL)
					AND ([PROJETO].[SOLICITANTE] LIKE @SOLICITANTE OR @SOLICITANTE IS NULL)
					AND ([PROJETO].[STATUS] = @STATUS OR @STATUS IS NULL)
					AND ([PROJETO].[DATA_PROSPECCAO] = @DATA_PROSPECCAO OR @DATA_PROSPECCAO IS NULL)
					AND ([PROJETO].[DATA_CONTRATACAO] = @DATA_CONTRATACAO OR @DATA_CONTRATACAO IS NULL)
					AND ([PROJETO].[LOCAL_TRABALHO] = @LOCAL_TRABALHO OR @LOCAL_TRABALHO IS NULL)
					AND ([PROJETO].[GARANTIA_DIAS] = @GARANTIA_DIAS OR @GARANTIA_DIAS IS NULL)
					AND ([PROJETO].[VALIDADE_DIAS] = @VALIDADE_DIAS OR @VALIDADE_DIAS IS NULL)
					AND ([PROJETO].[PRAZO_DIAS] = @PRAZO_DIAS OR @PRAZO_DIAS IS NULL)
					AND ([PROJETO].[HORAS] = @HORAS OR @HORAS IS NULL)
					AND ([PROJETO].[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS OR @PRAZO_PAGAMENTO_DIAS IS NULL)
					AND ([PROJETO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			AND (CONVERT(VARCHAR(8000), [PROJETO].[ESCOPO]) = CONVERT(VARCHAR(8000), @ESCOPO) OR @ESCOPO IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[PROJETO].[PROJETO_ID] AS [PROJETO_PROJETO_ID],
				[PROJETO].[USUARIO_ID] AS [PROJETO_USUARIO_ID],
				[PROJETO].[AGENCIA_ID] AS [PROJETO_AGENCIA_ID],
				[PROJETO].[CLIENTE_ID] AS [PROJETO_CLIENTE_ID],
				[PROJETO].[NOME] AS [PROJETO_NOME],
				[PROJETO].[DESCRICAO] AS [PROJETO_DESCRICAO],
				[PROJETO].[VALOR] AS [PROJETO_VALOR],
				[PROJETO].[SOLICITANTE] AS [PROJETO_SOLICITANTE],
				[PROJETO].[STATUS] AS [PROJETO_STATUS],
				[PROJETO].[DATA_PROSPECCAO] AS [PROJETO_DATA_PROSPECCAO],
				[PROJETO].[DATA_CONTRATACAO] AS [PROJETO_DATA_CONTRATACAO],
				[PROJETO].[LOCAL_TRABALHO] AS [PROJETO_LOCAL_TRABALHO],
				[PROJETO].[GARANTIA_DIAS] AS [PROJETO_GARANTIA_DIAS],
				[PROJETO].[VALIDADE_DIAS] AS [PROJETO_VALIDADE_DIAS],
				[PROJETO].[PRAZO_DIAS] AS [PROJETO_PRAZO_DIAS],
				[PROJETO].[HORAS] AS [PROJETO_HORAS],
				[PROJETO].[PRAZO_PAGAMENTO_DIAS] AS [PROJETO_PRAZO_PAGAMENTO_DIAS],
				[PROJETO].[DATA_CADASTRO] AS [PROJETO_DATA_CADASTRO],
				[PROJETO].[ESCOPO] AS [PROJETO_ESCOPO],
				[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
				[USUARIO].[NOME] AS [USUARIO_NOME],
				[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
				[USUARIO].[SENHA] AS [USUARIO_SENHA],
				[AGENCIA].[AGENCIA_ID] AS [AGENCIA_AGENCIA_ID],
				[AGENCIA].[NOME] AS [AGENCIA_NOME],
				[CLIENTE].[CLIENTE_ID] AS [CLIENTE_CLIENTE_ID],
				[CLIENTE].[AGENCIA_ID] AS [CLIENTE_AGENCIA_ID],
				[CLIENTE].[NOME] AS [CLIENTE_NOME],
				[PROJETO].[PROJETO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[PROJETO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [PROJETO].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [PROJETO].[CLIENTE_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [PROJETO].[NOME])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DESCRICAO' THEN CONVERT(SQL_Variant, [PROJETO].[DESCRICAO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PROJETO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'SOLICITANTE' THEN CONVERT(SQL_Variant, [PROJETO].[SOLICITANTE])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [PROJETO].[STATUS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_PROSPECCAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_PROSPECCAO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CONTRATACAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CONTRATACAO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'LOCAL_TRABALHO' THEN CONVERT(SQL_Variant, [PROJETO].[LOCAL_TRABALHO])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'GARANTIA_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[GARANTIA_DIAS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'VALIDADE_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[VALIDADE_DIAS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PRAZO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_DIAS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'HORAS' THEN CONVERT(SQL_Variant, [PROJETO].[HORAS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'PRAZO_PAGAMENTO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_PAGAMENTO_DIAS])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PROJETO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[PROJETO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [PROJETO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'AGENCIA_ID' THEN CONVERT(SQL_Variant, [PROJETO].[AGENCIA_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'CLIENTE_ID' THEN CONVERT(SQL_Variant, [PROJETO].[CLIENTE_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [PROJETO].[NOME])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DESCRICAO' THEN CONVERT(SQL_Variant, [PROJETO].[DESCRICAO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALOR' THEN CONVERT(SQL_Variant, [PROJETO].[VALOR])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'SOLICITANTE' THEN CONVERT(SQL_Variant, [PROJETO].[SOLICITANTE])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'STATUS' THEN CONVERT(SQL_Variant, [PROJETO].[STATUS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_PROSPECCAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_PROSPECCAO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CONTRATACAO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CONTRATACAO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'LOCAL_TRABALHO' THEN CONVERT(SQL_Variant, [PROJETO].[LOCAL_TRABALHO])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'GARANTIA_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[GARANTIA_DIAS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'VALIDADE_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[VALIDADE_DIAS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PRAZO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_DIAS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'HORAS' THEN CONVERT(SQL_Variant, [PROJETO].[HORAS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'PRAZO_PAGAMENTO_DIAS' THEN CONVERT(SQL_Variant, [PROJETO].[PRAZO_PAGAMENTO_DIAS])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'DATA_CADASTRO' THEN CONVERT(SQL_Variant, [PROJETO].[DATA_CADASTRO])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[PROJETO]
				LEFT JOIN USUARIO
					ON [PROJETO].[USUARIO_ID] = [USUARIO].[USUARIO_ID]
				LEFT JOIN AGENCIA
					ON [PROJETO].[AGENCIA_ID] = [AGENCIA].[AGENCIA_ID]
				LEFT JOIN CLIENTE
					ON [PROJETO].[CLIENTE_ID] = [CLIENTE].[CLIENTE_ID]
			WHERE
				([PROJETO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
				AND ([PROJETO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
				AND ([PROJETO].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
				AND ([PROJETO].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
				AND ([PROJETO].[NOME] LIKE @NOME OR @NOME IS NULL)
				AND ([PROJETO].[DESCRICAO] LIKE @DESCRICAO OR @DESCRICAO IS NULL)
				AND ([PROJETO].[VALOR] = @VALOR OR @VALOR IS NULL)
				AND ([PROJETO].[SOLICITANTE] LIKE @SOLICITANTE OR @SOLICITANTE IS NULL)
				AND ([PROJETO].[STATUS] = @STATUS OR @STATUS IS NULL)
				AND ([PROJETO].[DATA_PROSPECCAO] = @DATA_PROSPECCAO OR @DATA_PROSPECCAO IS NULL)
				AND ([PROJETO].[DATA_CONTRATACAO] = @DATA_CONTRATACAO OR @DATA_CONTRATACAO IS NULL)
				AND ([PROJETO].[LOCAL_TRABALHO] = @LOCAL_TRABALHO OR @LOCAL_TRABALHO IS NULL)
				AND ([PROJETO].[GARANTIA_DIAS] = @GARANTIA_DIAS OR @GARANTIA_DIAS IS NULL)
				AND ([PROJETO].[VALIDADE_DIAS] = @VALIDADE_DIAS OR @VALIDADE_DIAS IS NULL)
				AND ([PROJETO].[PRAZO_DIAS] = @PRAZO_DIAS OR @PRAZO_DIAS IS NULL)
				AND ([PROJETO].[HORAS] = @HORAS OR @HORAS IS NULL)
				AND ([PROJETO].[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS OR @PRAZO_PAGAMENTO_DIAS IS NULL)
				AND ([PROJETO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
			AND (CONVERT(VARCHAR(8000), [PROJETO].[ESCOPO]) = CONVERT(VARCHAR(8000), @ESCOPO) OR @ESCOPO IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [PROJETO_ATUALIZAR]
(
	@PROJETO_ID int,
	@USUARIO_ID int = null,
	@AGENCIA_ID int = null,
	@CLIENTE_ID int = null,
	@NOME varchar(255) = null,
	@DESCRICAO varchar(255) = null,
	@VALOR decimal(18, 2) = null,
	@SOLICITANTE varchar(255) = null,
	@STATUS int = null,
	@DATA_PROSPECCAO datetime = null,
	@DATA_CONTRATACAO datetime = null,
	@LOCAL_TRABALHO int = null,
	@GARANTIA_DIAS int = null,
	@VALIDADE_DIAS int = null,
	@PRAZO_DIAS int = null,
	@HORAS int = null,
	@PRAZO_PAGAMENTO_DIAS int = null,
	@DATA_CADASTRO datetime = null,
	@ESCOPO text = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[PROJETO]
	SET
		[USUARIO_ID] = @USUARIO_ID,
		[AGENCIA_ID] = @AGENCIA_ID,
		[CLIENTE_ID] = @CLIENTE_ID,
		[NOME] = @NOME,
		[DESCRICAO] = @DESCRICAO,
		[VALOR] = @VALOR,
		[SOLICITANTE] = @SOLICITANTE,
		[STATUS] = @STATUS,
		[DATA_PROSPECCAO] = @DATA_PROSPECCAO,
		[DATA_CONTRATACAO] = @DATA_CONTRATACAO,
		[LOCAL_TRABALHO] = @LOCAL_TRABALHO,
		[GARANTIA_DIAS] = @GARANTIA_DIAS,
		[VALIDADE_DIAS] = @VALIDADE_DIAS,
		[PRAZO_DIAS] = @PRAZO_DIAS,
		[HORAS] = @HORAS,
		[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS,
		[DATA_CADASTRO] = @DATA_CADASTRO,
		[ESCOPO] = @ESCOPO
	WHERE
		[PROJETO_ID] = @PROJETO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [PROJETO_INSERIR]
(
	@PROJETO_ID int = null OUTPUT,
	@USUARIO_ID int = null,
	@AGENCIA_ID int = null,
	@CLIENTE_ID int = null,
	@NOME varchar(255) = null,
	@DESCRICAO varchar(255) = null,
	@VALOR decimal(18, 2) = null,
	@SOLICITANTE varchar(255) = null,
	@STATUS int = null,
	@DATA_PROSPECCAO datetime = null,
	@DATA_CONTRATACAO datetime = null,
	@LOCAL_TRABALHO int = null,
	@GARANTIA_DIAS int = null,
	@VALIDADE_DIAS int = null,
	@PRAZO_DIAS int = null,
	@HORAS int = null,
	@PRAZO_PAGAMENTO_DIAS int = null,
	@DATA_CADASTRO datetime = null,
	@ESCOPO text = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [PROJETO]
	(
		[USUARIO_ID],
		[AGENCIA_ID],
		[CLIENTE_ID],
		[NOME],
		[DESCRICAO],
		[VALOR],
		[SOLICITANTE],
		[STATUS],
		[DATA_PROSPECCAO],
		[DATA_CONTRATACAO],
		[LOCAL_TRABALHO],
		[GARANTIA_DIAS],
		[VALIDADE_DIAS],
		[PRAZO_DIAS],
		[HORAS],
		[PRAZO_PAGAMENTO_DIAS],
		[DATA_CADASTRO],
		[ESCOPO]
	)
	VALUES
	(
		@USUARIO_ID,
		@AGENCIA_ID,
		@CLIENTE_ID,
		@NOME,
		@DESCRICAO,
		@VALOR,
		@SOLICITANTE,
		@STATUS,
		@DATA_PROSPECCAO,
		@DATA_CONTRATACAO,
		@LOCAL_TRABALHO,
		@GARANTIA_DIAS,
		@VALIDADE_DIAS,
		@PRAZO_DIAS,
		@HORAS,
		@PRAZO_PAGAMENTO_DIAS,
		@DATA_CADASTRO,
		@ESCOPO
	)

	SELECT @PROJETO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [PROJETO_EXCLUIR]
(
	@PROJETO_ID int = null,
	@USUARIO_ID int = null,
	@AGENCIA_ID int = null,
	@CLIENTE_ID int = null,
	@NOME varchar(255) = null,
	@DESCRICAO varchar(255) = null,
	@VALOR decimal(18, 2) = null,
	@SOLICITANTE varchar(255) = null,
	@STATUS int = null,
	@DATA_PROSPECCAO datetime = null,
	@DATA_CONTRATACAO datetime = null,
	@LOCAL_TRABALHO int = null,
	@GARANTIA_DIAS int = null,
	@VALIDADE_DIAS int = null,
	@PRAZO_DIAS int = null,
	@HORAS int = null,
	@PRAZO_PAGAMENTO_DIAS int = null,
	@DATA_CADASTRO datetime = null,
	@ESCOPO text = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[PROJETO] 
	WHERE 
		([PROJETO].[PROJETO_ID] = @PROJETO_ID OR @PROJETO_ID IS NULL)
		AND ([PROJETO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([PROJETO].[AGENCIA_ID] = @AGENCIA_ID OR @AGENCIA_ID IS NULL)
		AND ([PROJETO].[CLIENTE_ID] = @CLIENTE_ID OR @CLIENTE_ID IS NULL)
		AND ([PROJETO].[NOME] = @NOME OR @NOME IS NULL)
		AND ([PROJETO].[DESCRICAO] = @DESCRICAO OR @DESCRICAO IS NULL)
		AND ([PROJETO].[VALOR] = @VALOR OR @VALOR IS NULL)
		AND ([PROJETO].[SOLICITANTE] = @SOLICITANTE OR @SOLICITANTE IS NULL)
		AND ([PROJETO].[STATUS] = @STATUS OR @STATUS IS NULL)
		AND ([PROJETO].[DATA_PROSPECCAO] = @DATA_PROSPECCAO OR @DATA_PROSPECCAO IS NULL)
		AND ([PROJETO].[DATA_CONTRATACAO] = @DATA_CONTRATACAO OR @DATA_CONTRATACAO IS NULL)
		AND ([PROJETO].[LOCAL_TRABALHO] = @LOCAL_TRABALHO OR @LOCAL_TRABALHO IS NULL)
		AND ([PROJETO].[GARANTIA_DIAS] = @GARANTIA_DIAS OR @GARANTIA_DIAS IS NULL)
		AND ([PROJETO].[VALIDADE_DIAS] = @VALIDADE_DIAS OR @VALIDADE_DIAS IS NULL)
		AND ([PROJETO].[PRAZO_DIAS] = @PRAZO_DIAS OR @PRAZO_DIAS IS NULL)
		AND ([PROJETO].[HORAS] = @HORAS OR @HORAS IS NULL)
		AND ([PROJETO].[PRAZO_PAGAMENTO_DIAS] = @PRAZO_PAGAMENTO_DIAS OR @PRAZO_PAGAMENTO_DIAS IS NULL)
		AND ([PROJETO].[DATA_CADASTRO] = @DATA_CADASTRO OR @DATA_CADASTRO IS NULL)
		AND (CONVERT(VARCHAR(8000), [PROJETO].[ESCOPO]) = CONVERT(VARCHAR(8000), @ESCOPO) OR @ESCOPO IS NULL)

	RETURN @@Error

GO
CREATE PROCEDURE [USUARIO_CARREGAR]
(
	@USUARIO_ID int = null,
	@NOME varchar(255) = null,
	@EMAIL varchar(255) = null,
	@SENHA varchar(255) = null
)
AS
BEGIN

	SELECT
		[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
		[USUARIO].[NOME] AS [USUARIO_NOME],
		[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
		[USUARIO].[SENHA] AS [USUARIO_SENHA]
	FROM
		[USUARIO]
	WHERE
		([USUARIO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([USUARIO].[NOME] = @NOME OR @NOME IS NULL)
		AND ([USUARIO].[EMAIL] = @EMAIL OR @EMAIL IS NULL)
		AND ([USUARIO].[SENHA] = @SENHA OR @SENHA IS NULL)

	RETURN @@Error

END

GO
CREATE PROCEDURE [USUARIO_LISTAR]
(
	@pagina int = NULL,
	@registrosPorPagina int = NULL,
	@ordemCampo VARCHAR(255) = 'USUARIO_ID',
	@ordemTipo VARCHAR(4) = 'ASC',
	@totalRegistros INT = NULL OUTPUT,
	@USUARIO_ID int = null,
	@NOME varchar(255) = null,
	@EMAIL varchar(255) = null,
	@SENHA varchar(255) = null
)
AS
BEGIN

	IF (@pagina IS NULL OR @pagina = 0) SET @pagina = 1
	IF (@registrosPorPagina IS NULL) SET @registrosPorPagina = 0

	DECLARE @startRowIndex INT
	DECLARE @lastKeyValue NUMERIC(18,0)
	DECLARE @lastAscendingSortValue SQL_VARIANT
	DECLARE @lastDescendingSortValue SQL_VARIANT

	SET @totalRegistros = (
		SELECT
			COUNT(1)
		FROM
			[USUARIO]
		WHERE
			([USUARIO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
			AND ([USUARIO].[NOME] LIKE @NOME OR @NOME IS NULL)
			AND ([USUARIO].[EMAIL] LIKE @EMAIL OR @EMAIL IS NULL)
			AND ([USUARIO].[SENHA] LIKE @SENHA OR @SENHA IS NULL)
	)

	SET @startRowIndex = ((@pagina - 1) * @registrosPorPagina)
	IF (@startRowIndex > 0)
	BEGIN
		SET ROWCOUNT @startRowIndex
		SELECT 
			@lastKeyValue = [UniqueValue],
			@lastAscendingSortValue = [AscendingSort],
			@lastDescendingSortValue = [DescendingSort]
		FROM
			(
				SELECT
					[USUARIO].[USUARIO_ID] AS [UniqueValue],
					CASE
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [USUARIO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [USUARIO].[NOME])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'EMAIL' THEN CONVERT(SQL_Variant, [USUARIO].[EMAIL])
						WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'SENHA' THEN CONVERT(SQL_Variant, [USUARIO].[SENHA])
					ELSE
						NULL 
					END AS [DescendingSort],
					CASE
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [USUARIO].[USUARIO_ID])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [USUARIO].[NOME])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'EMAIL' THEN CONVERT(SQL_Variant, [USUARIO].[EMAIL])
						WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'SENHA' THEN CONVERT(SQL_Variant, [USUARIO].[SENHA])
					ELSE
						NULL
					END AS [AscendingSort]
				FROM
					[USUARIO]
				WHERE
					([USUARIO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
					AND ([USUARIO].[NOME] LIKE @NOME OR @NOME IS NULL)
					AND ([USUARIO].[EMAIL] LIKE @EMAIL OR @EMAIL IS NULL)
					AND ([USUARIO].[SENHA] LIKE @SENHA OR @SENHA IS NULL)
			) AS tab
		ORDER BY 
			[AscendingSort] ASC,
			[DescendingSort] DESC,
			[UniqueValue] ASC
	END

	SET ROWCOUNT @registrosPorPagina 

	SELECT
		*
	FROM
		(
			SELECT
				[USUARIO].[USUARIO_ID] AS [USUARIO_USUARIO_ID],
				[USUARIO].[NOME] AS [USUARIO_NOME],
				[USUARIO].[EMAIL] AS [USUARIO_EMAIL],
				[USUARIO].[SENHA] AS [USUARIO_SENHA],
				[USUARIO].[USUARIO_ID] AS [UniqueValue],
				CASE
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [USUARIO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [USUARIO].[NOME])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'EMAIL' THEN CONVERT(SQL_Variant, [USUARIO].[EMAIL])
					WHEN UPPER(@ordemTipo) = 'DESC' AND UPPER(@ordemCampo) = 'SENHA' THEN CONVERT(SQL_Variant, [USUARIO].[SENHA])
				ELSE
					NULL
				END AS [DescendingSort],
				CASE
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'USUARIO_ID' THEN CONVERT(SQL_Variant, [USUARIO].[USUARIO_ID])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'NOME' THEN CONVERT(SQL_Variant, [USUARIO].[NOME])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'EMAIL' THEN CONVERT(SQL_Variant, [USUARIO].[EMAIL])
					WHEN UPPER(@ordemTipo) = 'ASC' AND UPPER(@ordemCampo) = 'SENHA' THEN CONVERT(SQL_Variant, [USUARIO].[SENHA])
				ELSE
					NULL
				END AS [AscendingSort]
			FROM
				[USUARIO]
			WHERE
				([USUARIO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
				AND ([USUARIO].[NOME] LIKE @NOME OR @NOME IS NULL)
				AND ([USUARIO].[EMAIL] LIKE @EMAIL OR @EMAIL IS NULL)
				AND ([USUARIO].[SENHA] LIKE @SENHA OR @SENHA IS NULL)
		) AS tab
	WHERE
		(
			@lastAscendingSortValue IS NULL
			AND @lastDescendingSortValue IS NULL
			AND @lastKeyValue IS NULL
		)
		OR
		(
			(@lastAscendingSortValue IS NOT NULL)
			AND
			(
				([AscendingSort] > @lastAscendingSortValue)
				OR
				(
					[AscendingSort] = @lastAscendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
		OR
		(
			(@lastDescendingSortValue IS NOT NULL)
			AND
			(
				([DescendingSort] < @lastDescendingSortValue)
				OR
				(
					[DescendingSort] = @lastDescendingSortValue
					AND [UniqueValue] > @lastKeyValue
				)
			)
		)
	ORDER BY
		[AscendingSort] ASC,
		[DescendingSort] DESC,
		[UniqueValue] ASC

	SET ROWCOUNT 0 

	RETURN @@Error

END

GO
CREATE PROCEDURE [USUARIO_ATUALIZAR]
(
	@USUARIO_ID int,
	@NOME varchar(255) = null,
	@EMAIL varchar(255) = null,
	@SENHA varchar(255) = null
)
AS
	SET NOCOUNT ON
	
	UPDATE
		[USUARIO]
	SET
		[NOME] = @NOME,
		[EMAIL] = @EMAIL,
		[SENHA] = @SENHA
	WHERE
		[USUARIO_ID] = @USUARIO_ID

	RETURN @@Error

GO
CREATE PROCEDURE [USUARIO_INSERIR]
(
	@USUARIO_ID int = null OUTPUT,
	@NOME varchar(255) = null,
	@EMAIL varchar(255) = null,
	@SENHA varchar(255) = null
)
AS
	SET NOCOUNT ON

	INSERT INTO [USUARIO]
	(
		[NOME],
		[EMAIL],
		[SENHA]
	)
	VALUES
	(
		@NOME,
		@EMAIL,
		@SENHA
	)

	SELECT @USUARIO_ID = SCOPE_IDENTITY();

	RETURN @@Error

GO
CREATE PROCEDURE [USUARIO_EXCLUIR]
(
	@USUARIO_ID int = null,
	@NOME varchar(255) = null,
	@EMAIL varchar(255) = null,
	@SENHA varchar(255) = null
)
AS
	SET NOCOUNT ON

	DELETE FROM
		[USUARIO] 
	WHERE 
		([USUARIO].[USUARIO_ID] = @USUARIO_ID OR @USUARIO_ID IS NULL)
		AND ([USUARIO].[NOME] = @NOME OR @NOME IS NULL)
		AND ([USUARIO].[EMAIL] = @EMAIL OR @EMAIL IS NULL)
		AND ([USUARIO].[SENHA] = @SENHA OR @SENHA IS NULL)

	RETURN @@Error

GO
